package org.springblade.modules.admin.util;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.3.0.
 */
public class LeaveMsg extends Contract {
//    private static final String BINARY = "60a06040523480156200001157600080fd5b5060405162003be438038062003be4833981810160405281019062000037919062000240565b8382828273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505081600090805190602001906200008992919062000107565b508060019080519060200190620000a292919062000107565b505050506000600a60006101000a81548160ff0219169083151502179055508281604051602001620000d692919062000370565b604051602081830303815290604052600b9080519060200190620000fc92919062000107565b50505050506200053a565b82805462000115906200048c565b90600052602060002090601f01602090048101928262000139576000855562000185565b82601f106200015457805160ff191683800117855562000185565b8280016001018555821562000185579182015b828111156200018457825182559160200191906001019062000167565b5b50905062000194919062000198565b5090565b5b80821115620001b357600081600090555060010162000199565b5090565b6000620001ce620001c884620003d9565b620003a5565b905082815260208101848484011115620001e757600080fd5b620001f484828562000456565b509392505050565b6000815190506200020d8162000520565b92915050565b600082601f8301126200022557600080fd5b815162000237848260208601620001b7565b91505092915050565b600080600080608085870312156200025757600080fd5b60006200026787828801620001fc565b945050602085015167ffffffffffffffff8111156200028557600080fd5b620002938782880162000213565b935050604085015167ffffffffffffffff811115620002b157600080fd5b620002bf8782880162000213565b925050606085015167ffffffffffffffff811115620002dd57600080fd5b620002eb8782880162000213565b91505092959194509250565b600062000304826200040c565b62000310818562000417565b93506200032281856020860162000456565b80840191505092915050565b60006200033d60018362000417565b91507f2f000000000000000000000000000000000000000000000000000000000000006000830152600182019050919050565b60006200037e8285620002f7565b91506200038c8284620002f7565b915062000399826200032e565b91508190509392505050565b6000604051905081810181811067ffffffffffffffff82111715620003cf57620003ce620004f1565b5b8060405250919050565b600067ffffffffffffffff821115620003f757620003f6620004f1565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081905092915050565b60006200042f8262000436565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200047657808201518184015260208101905062000459565b8381111562000486576000848401525b50505050565b60006002820490506001821680620004a557607f821691505b60208210811415620004bc57620004bb620004c2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200052b8162000422565b81146200053757600080fd5b50565b60805160601c61365a6200058a600039600081816107fb0152818161098801528181610aa501528181610c2201528181610eee0152818161101c0152818161125101526112b5015261365a6000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80635c975abb116100b8578063a22cb4651161007c578063a22cb46514610375578063b88d4fde14610391578063c87b56dd146103ad578063d431b1ac146103dd578063e985e9c5146103e7578063f851a4401461041757610142565b80635c975abb146102bd5780636352211e146102db57806370a082311461030b57806395d89b411461033b578063a14481941461035957610142565b806323b872dd1161010a57806323b872dd146101ff5780632f745c591461021b57806339a0c6f91461024b57806342842e0e146102675780634f6ccce7146102835780634f842143146102b357610142565b806301ffc9a71461014757806306fdde0314610177578063081812fc14610195578063095ea7b3146101c557806318160ddd146101e1575b600080fd5b610161600480360381019061015c9190612610565b610435565b60405161016e9190612f5d565b60405180910390f35b61017f6104af565b60405161018c9190612f78565b60405180910390f35b6101af60048036038101906101aa91906126a3565b610541565b6040516101bc9190612ef6565b60405180910390f35b6101df60048036038101906101da91906125d4565b6105c6565b005b6101e96106de565b6040516101f691906131da565b60405180910390f35b610219600480360381019061021491906124ce565b6106eb565b005b610235600480360381019061023091906125d4565b610754565b60405161024291906131da565b60405180910390f35b61026560048036038101906102609190612662565b6107f9565b005b610281600480360381019061027c91906124ce565b6108cf565b005b61029d600480360381019061029891906126a3565b6108ef565b6040516102aa91906131da565b60405180910390f35b6102bb610986565b005b6102c5610a1e565b6040516102d29190612f5d565b60405180910390f35b6102f560048036038101906102f091906126a3565b610a35565b6040516103029190612ef6565b60405180910390f35b61032560048036038101906103209190612469565b610ad6565b60405161033291906131da565b60405180910390f35b610343610b8e565b6040516103509190612f78565b60405180910390f35b610373600480360381019061036e91906125d4565b610c20565b005b61038f600480360381019061038a9190612598565b610ccc565b005b6103ab60048036038101906103a6919061251d565b610e4d565b005b6103c760048036038101906103c291906126a3565b610eb8565b6040516103d49190612f78565b60405180910390f35b6103e5610eec565b005b61040160048036038101906103fc9190612492565b610f84565b60405161040e9190612f5d565b60405180910390f35b61041f611018565b60405161042c9190612ef6565b60405180910390f35b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104a857506104a782611040565b5b9050919050565b6060600080546104be9061344f565b80601f01602080910402602001604051908101604052809291908181526020018280546104ea9061344f565b80156105375780601f1061050c57610100808354040283529160200191610537565b820191906000526020600020905b81548152906001019060200180831161051a57829003601f168201915b5050505050905090565b600061054c82611122565b61058b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105829061313a565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105d182610a35565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610642576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106399061317a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661066161118e565b73ffffffffffffffffffffffffffffffffffffffff161480610690575061068f8161068a61118e565b610f84565b5b6106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c6906130da565b60405180910390fd5b6106d98383611196565b505050565b6000600880549050905090565b6106f48161124f565b6107056106ff61118e565b826112df565b610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b9061319a565b60405180910390fd5b61074f8383836113bd565b505050565b600061075f83610ad6565b82106107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079790612fba565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e906130ba565b60405180910390fd5b6000610891610b8e565b905081816040516020016108a6929190612ea3565b604051602081830303815290604052600b90805190602001906108ca92919061228d565b505050565b6108ea83838360405180602001604052806000815250610e4d565b505050565b60006108f96106de565b821061093a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610931906131ba565b60405180910390fd5b60088281548110610974577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0b906130ba565b60405180910390fd5b610a1c611619565b565b6000600a60009054906101000a900460ff16905090565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610acc577f0000000000000000000000000000000000000000000000000000000000000000915050610ad1565b809150505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3e906130fa565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610b9d9061344f565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc99061344f565b8015610c165780601f10610beb57610100808354040283529160200191610c16565b820191906000526020600020905b815481529060010190602001808311610bf957829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca5906130ba565b60405180910390fd5b610cc88282604051806020016040528060008152506116bb565b5050565b610cd461118e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d399061305a565b60405180910390fd5b8060056000610d4f61118e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610dfc61118e565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e419190612f5d565b60405180910390a35050565b610e568261124f565b610e67610e6161118e565b836112df565b610ea6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9d9061319a565b60405180910390fd5b610eb284848484611716565b50505050565b6060600b610ec583611772565b604051602001610ed6929190612ed2565b6040516020818303038152906040529050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f71906130ba565b60405180910390fd5b610f8261191f565b565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061110b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061111b575061111a826119c2565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661120983610a35565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156112dc576112ac81611122565b6112db576112da7f000000000000000000000000000000000000000000000000000000000000000082611a2c565b5b5b50565b60006112ea82611122565b611329576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113209061307a565b60405180910390fd5b600061133483610a35565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806113a357508373ffffffffffffffffffffffffffffffffffffffff1661138b84610541565b73ffffffffffffffffffffffffffffffffffffffff16145b806113b457506113b38185610f84565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166113dd82610a35565b73ffffffffffffffffffffffffffffffffffffffff1614611433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142a9061315a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149a9061303a565b60405180910390fd5b6114ae838383611bfa565b6114b9600082611196565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546115099190613365565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461156091906132de565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b611621610a1e565b611660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165790612f9a565b60405180910390fd5b6000600a60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6116a461118e565b6040516116b19190612ef6565b60405180910390a1565b6116c58383611a2c565b6116d26000848484611c52565b611711576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170890612fda565b60405180910390fd5b505050565b6117218484846113bd565b61172d84848484611c52565b61176c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176390612fda565b60405180910390fd5b50505050565b606060008214156117ba576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061191a565b600082905060005b600082146117ec5780806117d590613481565b915050600a826117e59190613334565b91506117c2565b60008167ffffffffffffffff81111561182e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156118605781602001600182028036833780820191505090505b5090505b60008514611913576001826118799190613365565b9150600a8561188891906134ca565b603061189491906132de565b60f81b8183815181106118d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561190c9190613334565b9450611864565b8093505050505b919050565b611927610a1e565b15611967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195e9061309a565b60405180910390fd5b6001600a60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119ab61118e565b6040516119b89190612ef6565b60405180910390a1565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a939061311a565b60405180910390fd5b611aa581611122565b15611ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611adc90612ffa565b60405180910390fd5b611af160008383611bfa565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b4191906132de565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b611c05838383611de9565b611c0d610a1e565b15611c4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c449061301a565b60405180910390fd5b505050565b6000611c738473ffffffffffffffffffffffffffffffffffffffff16611efd565b15611ddc578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611c9c61118e565b8786866040518563ffffffff1660e01b8152600401611cbe9493929190612f11565b602060405180830381600087803b158015611cd857600080fd5b505af1925050508015611d0957506040513d601f19601f82011682018060405250810190611d069190612639565b60015b611d8c573d8060008114611d39576040519150601f19603f3d011682016040523d82523d6000602084013e611d3e565b606091505b50600081511415611d84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7b90612fda565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611de1565b600190505b949350505050565b611df4838383611f10565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611e3757611e3281611f15565b611e76565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611e7557611e748382611f5e565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611eb957611eb4816120cb565b611ef8565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611ef757611ef6828261220e565b5b5b505050565b600080823b905060008111915050919050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001611f6b84610ad6565b611f759190613365565b905060006007600084815260200190815260200160002054905081811461205a576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506120df9190613365565b9050600060096000848152602001908152602001600020549050600060088381548110612135577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050806008838154811061217d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550816009600083815260200190815260200160002081905550600960008581526020019081526020016000206000905560088054806121f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600061221983610ad6565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b8280546122999061344f565b90600052602060002090601f0160209004810192826122bb5760008555612302565b82601f106122d457805160ff1916838001178555612302565b82800160010185558215612302579182015b828111156123015782518255916020019190600101906122e6565b5b50905061230f9190612313565b5090565b5b8082111561232c576000816000905550600101612314565b5090565b600061234361233e84613226565b6131f5565b90508281526020810184848401111561235b57600080fd5b61236684828561340d565b509392505050565b600061238161237c84613256565b6131f5565b90508281526020810184848401111561239957600080fd5b6123a484828561340d565b509392505050565b6000813590506123bb816135c8565b92915050565b6000813590506123d0816135df565b92915050565b6000813590506123e5816135f6565b92915050565b6000815190506123fa816135f6565b92915050565b600082601f83011261241157600080fd5b8135612421848260208601612330565b91505092915050565b600082601f83011261243b57600080fd5b813561244b84826020860161236e565b91505092915050565b6000813590506124638161360d565b92915050565b60006020828403121561247b57600080fd5b6000612489848285016123ac565b91505092915050565b600080604083850312156124a557600080fd5b60006124b3858286016123ac565b92505060206124c4858286016123ac565b9150509250929050565b6000806000606084860312156124e357600080fd5b60006124f1868287016123ac565b9350506020612502868287016123ac565b925050604061251386828701612454565b9150509250925092565b6000806000806080858703121561253357600080fd5b6000612541878288016123ac565b9450506020612552878288016123ac565b935050604061256387828801612454565b925050606085013567ffffffffffffffff81111561258057600080fd5b61258c87828801612400565b91505092959194509250565b600080604083850312156125ab57600080fd5b60006125b9858286016123ac565b92505060206125ca858286016123c1565b9150509250929050565b600080604083850312156125e757600080fd5b60006125f5858286016123ac565b925050602061260685828601612454565b9150509250929050565b60006020828403121561262257600080fd5b6000612630848285016123d6565b91505092915050565b60006020828403121561264b57600080fd5b6000612659848285016123eb565b91505092915050565b60006020828403121561267457600080fd5b600082013567ffffffffffffffff81111561268e57600080fd5b61269a8482850161242a565b91505092915050565b6000602082840312156126b557600080fd5b60006126c384828501612454565b91505092915050565b6126d581613399565b82525050565b6126e4816133ab565b82525050565b60006126f58261329b565b6126ff81856132b1565b935061270f81856020860161341c565b612718816135b7565b840191505092915050565b600061272e826132a6565b61273881856132c2565b935061274881856020860161341c565b612751816135b7565b840191505092915050565b6000612767826132a6565b61277181856132d3565b935061278181856020860161341c565b80840191505092915050565b6000815461279a8161344f565b6127a481866132d3565b945060018216600081146127bf57600181146127d057612803565b60ff19831686528186019350612803565b6127d985613286565b60005b838110156127fb578154818901526001820191506020810190506127dc565b838801955050505b50505092915050565b60006128196014836132c2565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000612859602b836132c2565b91507f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008301527f74206f6620626f756e64730000000000000000000000000000000000000000006020830152604082019050919050565b60006128bf6032836132c2565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000612925601c836132c2565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000612965602b836132c2565b91507f4252433732315061757361626c653a20746f6b656e207472616e73666572207760008301527f68696c65207061757365640000000000000000000000000000000000000000006020830152604082019050919050565b60006129cb6024836132c2565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612a316019836132c2565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000612a71602c836132c2565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612ad76010836132c2565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000612b176011836132c2565b91507f726573747269637420746f2061646d696e0000000000000000000000000000006000830152602082019050919050565b6000612b576038836132c2565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000612bbd602a836132c2565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000612c236020836132c2565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000612c63602c836132c2565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612cc96029836132c2565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612d2f6021836132c2565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612d956031836132c2565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000612dfb602c836132c2565b91507f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008301527f7574206f6620626f756e647300000000000000000000000000000000000000006020830152604082019050919050565b6000612e616001836132d3565b91507f2f000000000000000000000000000000000000000000000000000000000000006000830152600182019050919050565b612e9d81613403565b82525050565b6000612eaf828561275c565b9150612ebb828461275c565b9150612ec682612e54565b91508190509392505050565b6000612ede828561278d565b9150612eea828461275c565b91508190509392505050565b6000602082019050612f0b60008301846126cc565b92915050565b6000608082019050612f2660008301876126cc565b612f3360208301866126cc565b612f406040830185612e94565b8181036060830152612f5281846126ea565b905095945050505050565b6000602082019050612f7260008301846126db565b92915050565b60006020820190508181036000830152612f928184612723565b905092915050565b60006020820190508181036000830152612fb38161280c565b9050919050565b60006020820190508181036000830152612fd38161284c565b9050919050565b60006020820190508181036000830152612ff3816128b2565b9050919050565b6000602082019050818103600083015261301381612918565b9050919050565b6000602082019050818103600083015261303381612958565b9050919050565b60006020820190508181036000830152613053816129be565b9050919050565b6000602082019050818103600083015261307381612a24565b9050919050565b6000602082019050818103600083015261309381612a64565b9050919050565b600060208201905081810360008301526130b381612aca565b9050919050565b600060208201905081810360008301526130d381612b0a565b9050919050565b600060208201905081810360008301526130f381612b4a565b9050919050565b6000602082019050818103600083015261311381612bb0565b9050919050565b6000602082019050818103600083015261313381612c16565b9050919050565b6000602082019050818103600083015261315381612c56565b9050919050565b6000602082019050818103600083015261317381612cbc565b9050919050565b6000602082019050818103600083015261319381612d22565b9050919050565b600060208201905081810360008301526131b381612d88565b9050919050565b600060208201905081810360008301526131d381612dee565b9050919050565b60006020820190506131ef6000830184612e94565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561321c5761321b613588565b5b8060405250919050565b600067ffffffffffffffff82111561324157613240613588565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561327157613270613588565b5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006132e982613403565b91506132f483613403565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613329576133286134fb565b5b828201905092915050565b600061333f82613403565b915061334a83613403565b92508261335a5761335961352a565b5b828204905092915050565b600061337082613403565b915061337b83613403565b92508282101561338e5761338d6134fb565b5b828203905092915050565b60006133a4826133e3565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561343a57808201518184015260208101905061341f565b83811115613449576000848401525b50505050565b6000600282049050600182168061346757607f821691505b6020821081141561347b5761347a613559565b5b50919050565b600061348c82613403565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156134bf576134be6134fb565b5b600182019050919050565b60006134d582613403565b91506134e083613403565b9250826134f0576134ef61352a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6135d181613399565b81146135dc57600080fd5b50565b6135e8816133ab565b81146135f357600080fd5b50565b6135ff816133b7565b811461360a57600080fd5b50565b61361681613403565b811461362157600080fd5b5056fea2646970667358221220468150c2b3d54198a23490dface0ad63b61d49113458fff6ede3c1cf89a3677664736f6c63430008000033";
	private static final String BINARY
	= "608060405234801562000010575f80fd5b506040516200300438038062003004833981810160405281019062000036919062000434565b826040518060400160405280600881526020017f736f756c746573740000000000000000000000000000000000000000000000008152506040518060400160405280600881526020017f736f756c74657374000000000000000000000000000000000000000000000000815250815f9081620000b3919062000702565b508060019081620000c5919062000702565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001329190620007f7565b60405180910390fd5b6200014c816200018b60201b60201c565b50818160405160200162000162929190620008a0565b6040516020818303038152906040526008908162000181919062000702565b50505050620008d4565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200028a826200025f565b9050919050565b6200029c816200027e565b8114620002a7575f80fd5b50565b5f81519050620002ba8162000291565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200031082620002c8565b810181811067ffffffffffffffff82111715620003325762000331620002d8565b5b80604052505050565b5f620003466200024e565b905062000354828262000305565b919050565b5f67ffffffffffffffff821115620003765762000375620002d8565b5b6200038182620002c8565b9050602081019050919050565b5f5b83811015620003ad57808201518184015260208101905062000390565b5f8484015250505050565b5f620003ce620003c88462000359565b6200033b565b905082815260208101848484011115620003ed57620003ec620002c4565b5b620003fa8482856200038e565b509392505050565b5f82601f830112620004195762000418620002c0565b5b81516200042b848260208601620003b8565b91505092915050565b5f805f606084860312156200044e576200044d62000257565b5b5f6200045d86828701620002aa565b935050602084015167ffffffffffffffff8111156200048157620004806200025b565b5b6200048f8682870162000402565b925050604084015167ffffffffffffffff811115620004b357620004b26200025b565b5b620004c18682870162000402565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200051a57607f821691505b60208210810362000530576200052f620004d5565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620005947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000557565b620005a0868362000557565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620005ea620005e4620005de84620005b8565b620005c1565b620005b8565b9050919050565b5f819050919050565b6200060583620005ca565b6200061d6200061482620005f1565b84845462000563565b825550505050565b5f90565b6200063362000625565b62000640818484620005fa565b505050565b5b8181101562000667576200065b5f8262000629565b60018101905062000646565b5050565b601f821115620006b657620006808162000536565b6200068b8462000548565b810160208510156200069b578190505b620006b3620006aa8562000548565b83018262000645565b50505b505050565b5f82821c905092915050565b5f620006d85f1984600802620006bb565b1980831691505092915050565b5f620006f28383620006c7565b9150826002028217905092915050565b6200070d82620004cb565b67ffffffffffffffff811115620007295762000728620002d8565b5b62000735825462000502565b620007428282856200066b565b5f60209050601f83116001811462000778575f841562000763578287015190505b6200076f8582620006e5565b865550620007de565b601f198416620007888662000536565b5f5b82811015620007b1578489015182556001820191506020850194506020810190506200078a565b86831015620007d15784890151620007cd601f891682620006c7565b8355505b6001600288020188555050505b505050505050565b620007f1816200027e565b82525050565b5f6020820190506200080c5f830184620007e6565b92915050565b5f81905092915050565b5f6200082882620004cb565b62000834818562000812565b9350620008468185602086016200038e565b80840191505092915050565b7f2f000000000000000000000000000000000000000000000000000000000000005f82015250565b5f6200088860018362000812565b9150620008958262000852565b600182019050919050565b5f620008ad82856200081c565b9150620008bb82846200081c565b9150620008c8826200087a565b91508190509392505050565b61272280620008e25f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c806370a08231116100ab578063a22cb4651161006f578063a22cb46514610303578063b88d4fde1461031f578063c87b56dd1461033b578063e985e9c51461036b578063f2fde38b1461039b5761011f565b806370a0823114610271578063715018a6146102a15780638da5cb5b146102ab57806395d89b41146102c9578063a1448194146102e75761011f565b806323b872dd116100f257806323b872dd146101bd57806339a0c6f9146101d957806342842e0e146101f5578063589a1743146102115780636352211e146102415761011f565b806301ffc9a71461012357806306fdde0314610153578063081812fc14610171578063095ea7b3146101a1575b5f80fd5b61013d60048036038101906101389190611bf7565b6103b7565b60405161014a9190611c3c565b60405180910390f35b61015b6103c8565b6040516101689190611cdf565b60405180910390f35b61018b60048036038101906101869190611d32565b610457565b6040516101989190611d9c565b60405180910390f35b6101bb60048036038101906101b69190611ddf565b610472565b005b6101d760048036038101906101d29190611e1d565b610488565b005b6101f360048036038101906101ee9190611f99565b610587565b005b61020f600480360381019061020a9190611e1d565b6105a2565b005b61022b60048036038101906102269190611d32565b6105c1565b6040516102389190611d9c565b60405180910390f35b61025b60048036038101906102569190611d32565b6105ff565b6040516102689190611d9c565b60405180910390f35b61028b60048036038101906102869190611fe0565b610610565b604051610298919061201a565b60405180910390f35b6102a96106c6565b005b6102b36106d9565b6040516102c09190611d9c565b60405180910390f35b6102d1610701565b6040516102de9190611cdf565b60405180910390f35b61030160048036038101906102fc9190611ddf565b610791565b005b61031d6004803603810190610318919061205d565b61082c565b005b61033960048036038101906103349190612139565b610842565b005b61035560048036038101906103509190611d32565b61085f565b6040516103629190611cdf565b60405180910390f35b610385600480360381019061038091906121b9565b610871565b6040516103929190611c3c565b60405180910390f35b6103b560048036038101906103b09190611fe0565b6108ff565b005b5f6103c182610983565b9050919050565b60605f80546103d690612224565b80601f016020809104026020016040519081016040528092919081815260200182805461040290612224565b801561044d5780601f106104245761010080835404028352916020019161044d565b820191905f5260205f20905b81548152906001019060200180831161043057829003601f168201915b5050505050905090565b5f610461826109e3565b5061046b82610a69565b9050919050565b610484828261047f610aa2565b610aa9565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104f8575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104ef9190611d9c565b60405180910390fd5b5f61050b8383610506610aa2565b610abb565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610581578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161057893929190612254565b60405180910390fd5b50505050565b61058f610cc6565b806008908161059e9190612426565b5050565b6105bc83838360405180602001604052805f815250610842565b505050565b5f8060095f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080915050919050565b5f610609826109e3565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610681575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106789190611d9c565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106ce610cc6565b6106d75f610d4d565b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461071090612224565b80601f016020809104026020016040519081016040528092919081815260200182805461073c90612224565b80156107875780601f1061075e57610100808354040283529160200191610787565b820191905f5260205f20905b81548152906001019060200180831161076a57829003601f168201915b5050505050905090565b610799610cc6565b5f6107a382610e10565b6040516020016107b39190612579565b60405160208183030381529060405290506107ce8383610eda565b6107d88282610ef7565b8260095f8481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b61083e610837610aa2565b8383610f51565b5050565b61084d848484610488565b610859848484846110ba565b50505050565b606061086a8261126c565b9050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610907610cc6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610977575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161096e9190611d9c565b60405180910390fd5b61098081610d4d565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109dc57506109db82611377565b5b9050919050565b5f806109ee83611458565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a6057826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a57919061201a565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610ab68383836001611491565b505050565b5f80610ac684611458565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b0757610b06818486611650565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b9257610b465f855f80611491565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c1157600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610cce610aa2565b73ffffffffffffffffffffffffffffffffffffffff16610cec6106d9565b73ffffffffffffffffffffffffffffffffffffffff1614610d4b57610d0f610aa2565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d429190611d9c565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60605f6001610e1e84611713565b0190505f8167ffffffffffffffff811115610e3c57610e3b611e75565b5b6040519080825280601f01601f191660200182016040528015610e6e5781602001600182028036833780820191505090505b5090505f82602001820190505b600115610ecf578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610ec457610ec361259a565b5b0494505f8503610e7b575b819350505050919050565b610ef3828260405180602001604052805f815250611864565b5050565b8060065f8481526020019081526020015f209081610f159190612426565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610f45919061201a565b60405180910390a15050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc157816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610fb89190611d9c565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110ad9190611c3c565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611266578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026110fd610aa2565b8685856040518563ffffffff1660e01b815260040161111f9493929190612619565b6020604051808303815f875af192505050801561115a57506040513d601f19601f820116820180604052508101906111579190612677565b60015b6111db573d805f8114611188576040519150601f19603f3d011682016040523d82523d5f602084013e61118d565b606091505b505f8151036111d357836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111ca9190611d9c565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461126457836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161125b9190611d9c565b60405180910390fd5b505b50505050565b6060611277826109e3565b505f60065f8481526020019081526020015f20805461129590612224565b80601f01602080910402602001604051908101604052809291908181526020018280546112c190612224565b801561130c5780601f106112e35761010080835404028352916020019161130c565b820191905f5260205f20905b8154815290600101906020018083116112ef57829003601f168201915b505050505090505f61131c61187f565b90505f815103611330578192505050611372565b5f8251111561136457808260405160200161134c9291906126a2565b60405160208183030381529060405292505050611372565b61136d8461190f565b925050505b919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061144157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611451575061145082611975565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806114c957505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156115fb575f6114d8846109e3565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561154257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561155557506115538184610871565b155b1561159757826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161158e9190611d9c565b60405180910390fd5b81156115f957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61165b8383836119de565b61170e575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116cf57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116c6919061201a565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016117059291906126c5565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061176f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816117655761176461259a565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106117ac576d04ee2d6d415b85acef810000000083816117a2576117a161259a565b5b0492506020810190505b662386f26fc1000083106117db57662386f26fc1000083816117d1576117d061259a565b5b0492506010810190505b6305f5e1008310611804576305f5e10083816117fa576117f961259a565b5b0492506008810190505b612710831061182957612710838161181f5761181e61259a565b5b0492506004810190505b6064831061184c57606483816118425761184161259a565b5b0492506002810190505b600a831061185b576001810190505b80915050919050565b61186e8383611a9e565b61187a5f8484846110ba565b505050565b60606008805461188e90612224565b80601f01602080910402602001604051908101604052809291908181526020018280546118ba90612224565b80156119055780601f106118dc57610100808354040283529160200191611905565b820191905f5260205f20905b8154815290600101906020018083116118e857829003601f168201915b5050505050905090565b606061191a826109e3565b505f61192461187f565b90505f8151116119425760405180602001604052805f81525061196d565b8061194c84610e10565b60405160200161195d9291906126a2565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611a9557508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a565750611a558484610871565b5b80611a9457508273ffffffffffffffffffffffffffffffffffffffff16611a7c83610a69565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b0e575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611b059190611d9c565b60405180910390fd5b5f611b1a83835f610abb565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b8c575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611b839190611d9c565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bd681611ba2565b8114611be0575f80fd5b50565b5f81359050611bf181611bcd565b92915050565b5f60208284031215611c0c57611c0b611b9a565b5b5f611c1984828501611be3565b91505092915050565b5f8115159050919050565b611c3681611c22565b82525050565b5f602082019050611c4f5f830184611c2d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611c8c578082015181840152602081019050611c71565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611cb182611c55565b611cbb8185611c5f565b9350611ccb818560208601611c6f565b611cd481611c97565b840191505092915050565b5f6020820190508181035f830152611cf78184611ca7565b905092915050565b5f819050919050565b611d1181611cff565b8114611d1b575f80fd5b50565b5f81359050611d2c81611d08565b92915050565b5f60208284031215611d4757611d46611b9a565b5b5f611d5484828501611d1e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d8682611d5d565b9050919050565b611d9681611d7c565b82525050565b5f602082019050611daf5f830184611d8d565b92915050565b611dbe81611d7c565b8114611dc8575f80fd5b50565b5f81359050611dd981611db5565b92915050565b5f8060408385031215611df557611df4611b9a565b5b5f611e0285828601611dcb565b9250506020611e1385828601611d1e565b9150509250929050565b5f805f60608486031215611e3457611";
//	= "608060405234801562000010575f80fd5b506040516200300438038062003004833981810160405281019062000036919062000434565b826040518060400160405280600881526020017f736f756c746573740000000000000000000000000000000000000000000000008152506040518060400160405280600881526020017f736f756c74657374000000000000000000000000000000000000000000000000815250815f9081620000b3919062000702565b508060019081620000c5919062000702565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001329190620007f7565b60405180910390fd5b6200014c816200018b60201b60201c565b50818160405160200162000162929190620008a0565b6040516020818303038152906040526008908162000181919062000702565b50505050620008d4565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200028a826200025f565b9050919050565b6200029c816200027e565b8114620002a7575f80fd5b50565b5f81519050620002ba8162000291565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200031082620002c8565b810181811067ffffffffffffffff82111715620003325762000331620002d8565b5b80604052505050565b5f620003466200024e565b905062000354828262000305565b919050565b5f67ffffffffffffffff821115620003765762000375620002d8565b5b6200038182620002c8565b9050602081019050919050565b5f5b83811015620003ad57808201518184015260208101905062000390565b5f8484015250505050565b5f620003ce620003c88462000359565b6200033b565b905082815260208101848484011115620003ed57620003ec620002c4565b5b620003fa8482856200038e565b509392505050565b5f82601f830112620004195762000418620002c0565b5b81516200042b848260208601620003b8565b91505092915050565b5f805f606084860312156200044e576200044d62000257565b5b5f6200045d86828701620002aa565b935050602084015167ffffffffffffffff8111156200048157620004806200025b565b5b6200048f8682870162000402565b925050604084015167ffffffffffffffff811115620004b357620004b26200025b565b5b620004c18682870162000402565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200051a57607f821691505b60208210810362000530576200052f620004d5565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620005947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000557565b620005a0868362000557565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620005ea620005e4620005de84620005b8565b620005c1565b620005b8565b9050919050565b5f819050919050565b6200060583620005ca565b6200061d6200061482620005f1565b84845462000563565b825550505050565b5f90565b6200063362000625565b62000640818484620005fa565b505050565b5b8181101562000667576200065b5f8262000629565b60018101905062000646565b5050565b601f821115620006b657620006808162000536565b6200068b8462000548565b810160208510156200069b578190505b620006b3620006aa8562000548565b83018262000645565b50505b505050565b5f82821c905092915050565b5f620006d85f1984600802620006bb565b1980831691505092915050565b5f620006f28383620006c7565b9150826002028217905092915050565b6200070d82620004cb565b67ffffffffffffffff811115620007295762000728620002d8565b5b62000735825462000502565b620007428282856200066b565b5f60209050601f83116001811462000778575f841562000763578287015190505b6200076f8582620006e5565b865550620007de565b601f198416620007888662000536565b5f5b82811015620007b1578489015182556001820191506020850194506020810190506200078a565b86831015620007d15784890151620007cd601f891682620006c7565b8355505b6001600288020188555050505b505050505050565b620007f1816200027e565b82525050565b5f6020820190506200080c5f830184620007e6565b92915050565b5f81905092915050565b5f6200082882620004cb565b62000834818562000812565b9350620008468185602086016200038e565b80840191505092915050565b7f2f000000000000000000000000000000000000000000000000000000000000005f82015250565b5f6200088860018362000812565b9150620008958262000852565b600182019050919050565b5f620008ad82856200081c565b9150620008bb82846200081c565b9150620008c8826200087a565b91508190509392505050565b61272280620008e25f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c806370a08231116100ab578063a22cb4651161006f578063a22cb46514610303578063b88d4fde1461031f578063c87b56dd1461033b578063e985e9c51461036b578063f2fde38b1461039b5761011f565b806370a0823114610271578063715018a6146102a15780638da5cb5b146102ab57806395d89b41146102c9578063a1448194146102e75761011f565b806323b872dd116100f257806323b872dd146101bd57806339a0c6f9146101d957806342842e0e146101f5578063589a1743146102115780636352211e146102415761011f565b806301ffc9a71461012357806306fdde0314610153578063081812fc14610171578063095ea7b3146101a1575b5f80fd5b61013d60048036038101906101389190611bf7565b6103b7565b60405161014a9190611c3c565b60405180910390f35b61015b6103c8565b6040516101689190611cdf565b60405180910390f35b61018b60048036038101906101869190611d32565b610457565b6040516101989190611d9c565b60405180910390f35b6101bb60048036038101906101b69190611ddf565b610472565b005b6101d760048036038101906101d29190611e1d565b610488565b005b6101f360048036038101906101ee9190611f99565b610587565b005b61020f600480360381019061020a9190611e1d565b6105a2565b005b61022b60048036038101906102269190611d32565b6105c1565b6040516102389190611d9c565b60405180910390f35b61025b60048036038101906102569190611d32565b6105ff565b6040516102689190611d9c565b60405180910390f35b61028b60048036038101906102869190611fe0565b610610565b604051610298919061201a565b60405180910390f35b6102a96106c6565b005b6102b36106d9565b6040516102c09190611d9c565b60405180910390f35b6102d1610701565b6040516102de9190611cdf565b60405180910390f35b61030160048036038101906102fc9190611ddf565b610791565b005b61031d6004803603810190610318919061205d565b61082c565b005b61033960048036038101906103349190612139565b610842565b005b61035560048036038101906103509190611d32565b61085f565b6040516103629190611cdf565b60405180910390f35b610385600480360381019061038091906121b9565b610871565b6040516103929190611c3c565b60405180910390f35b6103b560048036038101906103b09190611fe0565b6108ff565b005b5f6103c182610983565b9050919050565b60605f80546103d690612224565b80601f016020809104026020016040519081016040528092919081815260200182805461040290612224565b801561044d5780601f106104245761010080835404028352916020019161044d565b820191905f5260205f20905b81548152906001019060200180831161043057829003601f168201915b5050505050905090565b5f610461826109e3565b5061046b82610a69565b9050919050565b610484828261047f610aa2565b610aa9565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104f8575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104ef9190611d9c565b60405180910390fd5b5f61050b8383610506610aa2565b610abb565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610581578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161057893929190612254565b60405180910390fd5b50505050565b61058f610cc6565b806008908161059e9190612426565b5050565b6105bc83838360405180602001604052805f815250610842565b505050565b5f8060095f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080915050919050565b5f610609826109e3565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610681575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106789190611d9c565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106ce610cc6565b6106d75f610d4d565b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461071090612224565b80601f016020809104026020016040519081016040528092919081815260200182805461073c90612224565b80156107875780601f1061075e57610100808354040283529160200191610787565b820191905f5260205f20905b81548152906001019060200180831161076a57829003601f168201915b5050505050905090565b610799610cc6565b5f6107a382610e10565b6040516020016107b39190612579565b60405160208183030381529060405290506107ce8383610eda565b6107d88282610ef7565b8260095f8481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b61083e610837610aa2565b8383610f51565b5050565b61084d848484610488565b610859848484846110ba565b50505050565b606061086a8261126c565b9050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610907610cc6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610977575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161096e9190611d9c565b60405180910390fd5b61098081610d4d565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109dc57506109db82611377565b5b9050919050565b5f806109ee83611458565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a6057826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a57919061201a565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610ab68383836001611491565b505050565b5f80610ac684611458565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b0757610b06818486611650565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b9257610b465f855f80611491565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c1157600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610cce610aa2565b73ffffffffffffffffffffffffffffffffffffffff16610cec6106d9565b73ffffffffffffffffffffffffffffffffffffffff1614610d4b57610d0f610aa2565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d429190611d9c565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60605f6001610e1e84611713565b0190505f8167ffffffffffffffff811115610e3c57610e3b611e75565b5b6040519080825280601f01601f191660200182016040528015610e6e5781602001600182028036833780820191505090505b5090505f82602001820190505b600115610ecf578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610ec457610ec361259a565b5b0494505f8503610e7b575b819350505050919050565b610ef3828260405180602001604052805f815250611864565b5050565b8060065f8481526020019081526020015f209081610f159190612426565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610f45919061201a565b60405180910390a15050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc157816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610fb89190611d9c565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110ad9190611c3c565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611266578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026110fd610aa2565b8685856040518563ffffffff1660e01b815260040161111f9493929190612619565b6020604051808303815f875af192505050801561115a57506040513d601f19601f820116820180604052508101906111579190612677565b60015b6111db573d805f8114611188576040519150601f19603f3d011682016040523d82523d5f602084013e61118d565b606091505b505f8151036111d357836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111ca9190611d9c565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461126457836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161125b9190611d9c565b60405180910390fd5b505b50505050565b6060611277826109e3565b505f60065f8481526020019081526020015f20805461129590612224565b80601f01602080910402602001604051908101604052809291908181526020018280546112c190612224565b801561130c5780601f106112e35761010080835404028352916020019161130c565b820191905f5260205f20905b8154815290600101906020018083116112ef57829003601f168201915b505050505090505f61131c61187f565b90505f815103611330578192505050611372565b5f8251111561136457808260405160200161134c9291906126a2565b60405160208183030381529060405292505050611372565b61136d8461190f565b925050505b919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061144157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611451575061145082611975565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806114c957505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156115fb575f6114d8846109e3565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561154257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561155557506115538184610871565b155b1561159757826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161158e9190611d9c565b60405180910390fd5b81156115f957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61165b8383836119de565b61170e575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116cf57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116c6919061201a565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016117059291906126c5565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061176f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816117655761176461259a565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106117ac576d04ee2d6d415b85acef810000000083816117a2576117a161259a565b5b0492506020810190505b662386f26fc1000083106117db57662386f26fc1000083816117d1576117d061259a565b5b0492506010810190505b6305f5e1008310611804576305f5e10083816117fa576117f961259a565b5b0492506008810190505b612710831061182957612710838161181f5761181e61259a565b5b0492506004810190505b6064831061184c57606483816118425761184161259a565b5b0492506002810190505b600a831061185b576001810190505b80915050919050565b61186e8383611a9e565b61187a5f8484846110ba565b505050565b60606008805461188e90612224565b80601f01602080910402602001604051908101604052809291908181526020018280546118ba90612224565b80156119055780601f106118dc57610100808354040283529160200191611905565b820191905f5260205f20905b8154815290600101906020018083116118e857829003601f168201915b5050505050905090565b606061191a826109e3565b505f61192461187f565b90505f8151116119425760405180602001604052805f81525061196d565b8061194c84610e10565b60405160200161195d9291906126a2565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611a9557508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a565750611a558484610871565b5b80611a9457508273ffffffffffffffffffffffffffffffffffffffff16611a7c83610a69565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b0e575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611b059190611d9c565b60405180910390fd5b5f611b1a83835f610abb565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b8c575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611b839190611d9c565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bd681611ba2565b8114611be0575f80fd5b50565b5f81359050611bf181611bcd565b92915050565b5f60208284031215611c0c57611c0b611b9a565b5b5f611c1984828501611be3565b91505092915050565b5f8115159050919050565b611c3681611c22565b82525050565b5f602082019050611c4f5f830184611c2d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611c8c578082015181840152602081019050611c71565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611cb182611c55565b611cbb8185611c5f565b9350611ccb818560208601611c6f565b611cd481611c97565b840191505092915050565b5f6020820190508181035f830152611cf78184611ca7565b905092915050565b5f819050919050565b611d1181611cff565b8114611d1b575f80fd5b50565b5f81359050611d2c81611d08565b92915050565b5f60208284031215611d4757611d46611b9a565b5b5f611d5484828501611d1e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d8682611d5d565b9050919050565b611d9681611d7c565b82525050565b5f602082019050611daf5f830184611d8d565b92915050565b611dbe81611d7c565b8114611dc8575f80fd5b50565b5f81359050611dd981611db5565b92915050565b5f8060408385031215611df557611df4611b9a565b5b5f611e0285828601611dcb565b9250506020611e1385828601611d1e565b9150509250929050565b5f805f60608486031215611e3457611e33611b9a565b5b5f611e4186828701611dcb565b9350506020611e5286828701611dcb565b9250506040611e6386828701611d1e565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611eab82611c97565b810181811067ffffffffffffffff82111715611eca57611ec9611e75565b5b80604052505050565b5f611edc611b91565b9050611ee88282611ea2565b919050565b5f67ffffffffffffffff821115611f0757611f06611e75565b5b611f1082611c97565b9050602081019050919050565b828183375f83830152505050565b5f611f3d611f3884611eed565b611ed3565b905082815260208101848484011115611f5957611f58611e71565b5b611f64848285611f1d565b509392505050565b5f82601f830112611f8057611f7f611e6d565b5b8135611f90848260208601611f2b565b91505092915050565b5f60208284031215611fae57611fad611b9a565b5b5f82013567ffffffffffffffff811115611fcb57611fca611b9e565b5b611fd784828501611f6c565b91505092915050565b5f60208284031215611ff557611ff4611b9a565b5b5f61200284828501611dcb565b91505092915050565b61201481611cff565b82525050565b5f60208201905061202d5f83018461200b565b92915050565b61203c81611c22565b8114612046575f80fd5b50565b5f8135905061205781612033565b92915050565b5f806040838503121561207357612072611b9a565b5b5f61208085828601611dcb565b925050602061209185828601612049565b9150509250929050565b5f67ffffffffffffffff8211156120b5576120b4611e75565b5b6120be82611c97565b9050602081019050919050565b5f6120dd6120d88461209b565b611ed3565b9050828152602081018484840111156120f9576120f8611e71565b5b612104848285611f1d565b509392505050565b5f82601f8301126121205761211f611e6d565b5b81356121308482602086016120cb565b91505092915050565b5f805f806080858703121561215157612150611b9a565b5b5f61215e87828801611dcb565b945050602061216f87828801611dcb565b935050604061218087828801611d1e565b925050606085013567ffffffffffffffff8111156121a1576121a0611b9e565b5b6121ad8782880161210c565b91505092959194509250565b5f80604083850312156121cf576121ce611b9a565b5b5f6121dc85828601611dcb565b92505060206121ed85828601611dcb565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061223b57607f821691505b60208210810361224e5761224d6121f7565b5b50919050565b5f6060820190506122675f830186611d8d565b612274602083018561200b565b6122816040830184611d8d565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026122e57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826122aa565b6122ef86836122aa565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61232a61232561232084611cff565b612307565b611cff565b9050919050565b5f819050919050565b61234383612310565b61235761234f82612331565b8484546122b6565b825550505050565b5f90565b61236b61235f565b61237681848461233a565b505050565b5b818110156123995761238e5f82612363565b60018101905061237c565b5050565b601f8211156123de576123af81612289565b6123b88461229b565b810160208510156123c7578190505b6123db6123d38561229b565b83018261237b565b50505b505050565b5f82821c905092915050565b5f6123fe5f19846008026123e3565b1980831691505092915050565b5f61241683836123ef565b9150826002028217905092915050565b61242f82611c55565b67ffffffffffffffff81111561244857612447611e75565b5b6124528254612224565b61245d82828561239d565b5f60209050601f83116001811461248e575f841561247c578287015190505b612486858261240b565b8655506124ed565b601f19841661249c86612289565b5f5b828110156124c35784890151825560018201915060208501945060208101905061249e565b868310156124e057848901516124dc601f8916826123ef565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f61250982611c55565b61251381856124f5565b9350612523818560208601611c6f565b80840191505092915050565b7f2f000000000000000000000000000000000000000000000000000000000000005f82015250565b5f6125636001836124f5565b915061256e8261252f565b600182019050919050565b5f61258482846124ff565b915061258f82612557565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f6125eb826125c7565b6125f581856125d1565b9350612605818560208601611c6f565b61260e81611c97565b840191505092915050565b5f60808201905061262c5f830187611d8d565b6126396020830186611d8d565b612646604083018561200b565b818103606083015261265881846125e1565b905095945050505050565b5f8151905061267181611bcd565b92915050565b5f6020828403121561268c5761268b611b9a565b5b5f61269984828501612663565b91505092915050565b5f6126ad82856124ff565b91506126b982846124ff565b91508190509392505050565b5f6040820190506126d85f830185611d8d565b6126e5602083018461200b565b939250505056fea2646970667358221220b6df3c112a6679eefe79ea52e653b2895ae233426a934cc4845dbb49b29d793d64736f6c63430008140033";
    public static final String FUNC_ADMIN = "admin";

    public static final String FUNC_APPROVE = "approve";

    public static final String FUNC_BALANCEOF = "balanceOf";

    public static final String FUNC_CHANGEBASEURI = "changeBaseURI";

    public static final String FUNC_GETAPPROVED = "getApproved";

    public static final String FUNC_ISAPPROVEDFORALL = "isApprovedForAll";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_OWNEROF = "ownerOf";

    public static final String FUNC_PAUSED = "paused";

    public static final String FUNC_SAFEMINT = "safeMint";

    public static final String FUNC_SAFETRANSFERFROM = "safeTransferFrom";

    public static final String FUNC_SETAPPROVALFORALL = "setApprovalForAll";

    public static final String FUNC_SETPAUSE = "setPause";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_SYMBOL = "symbol";

    public static final String FUNC_TOKENBYINDEX = "tokenByIndex";

    public static final String FUNC_TOKENOFOWNERBYINDEX = "tokenOfOwnerByIndex";

    public static final String FUNC_TOKENURI = "tokenURI";

    public static final String FUNC_TOTALSUPPLY = "totalSupply";

    public static final String FUNC_TRANSFERFROM = "transferFrom";

    public static final String FUNC_UNSETPAUSE = "unsetPause";

    public static final Event APPROVAL_EVENT = new Event("Approval",
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>(true) {}));
    ;

    public static final Event APPROVALFORALL_EVENT = new Event("ApprovalForAll",
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Bool>() {}));
    ;

    public static final Event PAUSED_EVENT = new Event("Paused",
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event TRANSFER_EVENT = new Event("Transfer",
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>(true) {}));
    ;

    public static final Event UNPAUSED_EVENT = new Event("Unpaused",
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    @Deprecated
    protected LeaveMsg(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected LeaveMsg(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected LeaveMsg(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected LeaveMsg(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<ApprovalEventResponse> getApprovalEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPROVAL_EVENT, transactionReceipt);
        ArrayList<ApprovalEventResponse> responses = new ArrayList<ApprovalEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApprovalEventResponse typedResponse = new ApprovalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.approved = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.tokenId = (BigInteger) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ApprovalEventResponse>() {
            @Override
            public ApprovalEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPROVAL_EVENT, log);
                ApprovalEventResponse typedResponse = new ApprovalEventResponse();
                typedResponse.log = log;
                typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.approved = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.tokenId = (BigInteger) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPROVAL_EVENT));
        return approvalEventFlowable(filter);
    }

    public List<ApprovalForAllEventResponse> getApprovalForAllEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPROVALFORALL_EVENT, transactionReceipt);
        ArrayList<ApprovalForAllEventResponse> responses = new ArrayList<ApprovalForAllEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApprovalForAllEventResponse typedResponse = new ApprovalForAllEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.operator = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.approved = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ApprovalForAllEventResponse> approvalForAllEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ApprovalForAllEventResponse>() {
            @Override
            public ApprovalForAllEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPROVALFORALL_EVENT, log);
                ApprovalForAllEventResponse typedResponse = new ApprovalForAllEventResponse();
                typedResponse.log = log;
                typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.operator = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.approved = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ApprovalForAllEventResponse> approvalForAllEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPROVALFORALL_EVENT));
        return approvalForAllEventFlowable(filter);
    }

    public List<PausedEventResponse> getPausedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PAUSED_EVENT, transactionReceipt);
        ArrayList<PausedEventResponse> responses = new ArrayList<PausedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PausedEventResponse typedResponse = new PausedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PausedEventResponse>() {
            @Override
            public PausedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PAUSED_EVENT, log);
                PausedEventResponse typedResponse = new PausedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PAUSED_EVENT));
        return pausedEventFlowable(filter);
    }

    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            TransferEventResponse typedResponse = new TransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.tokenId = (BigInteger) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<TransferEventResponse> transferEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, TransferEventResponse>() {
            @Override
            public TransferEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER_EVENT, log);
                TransferEventResponse typedResponse = new TransferEventResponse();
                typedResponse.log = log;
                typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.tokenId = (BigInteger) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<TransferEventResponse> transferEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TRANSFER_EVENT));
        return transferEventFlowable(filter);
    }

    public List<UnpausedEventResponse> getUnpausedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(UNPAUSED_EVENT, transactionReceipt);
        ArrayList<UnpausedEventResponse> responses = new ArrayList<UnpausedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            UnpausedEventResponse typedResponse = new UnpausedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, UnpausedEventResponse>() {
            @Override
            public UnpausedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(UNPAUSED_EVENT, log);
                UnpausedEventResponse typedResponse = new UnpausedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(UNPAUSED_EVENT));
        return unpausedEventFlowable(filter);
    }

    public RemoteCall<String> admin() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADMIN,
                Arrays.<Type>asList(),
//                Collections.<TypeReference<?>>emptyList());
				Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
//        return executeRemoteCallTransaction(function);
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> approve(String to, BigInteger tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_APPROVE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(to),
                new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> balanceOf(String owner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BALANCEOF,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(owner)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> changeBaseURI(String newBaseURI) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CHANGEBASEURI,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(newBaseURI)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

	public RemoteCall<String> getApproved(BigInteger tokenId) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETAPPROVED,
			Arrays.<Type>asList(new Uint256(tokenId)),
			Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

    public RemoteCall<TransactionReceipt> isApprovedForAll(String owner, String operator) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ISAPPROVEDFORALL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(owner),
                new org.web3j.abi.datatypes.Address(operator)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> name() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_NAME,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

	public RemoteCall<String> ownerOf(BigInteger tokenId) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNEROF,
			Arrays.<Type>asList(new Uint256(tokenId)),
			Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

    public RemoteCall<TransactionReceipt> paused() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PAUSED,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> safeMint(String to, BigInteger tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SAFEMINT,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(to),
                new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> safeTransferFrom(String from, String to, BigInteger tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SAFETRANSFERFROM,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(from),
                new org.web3j.abi.datatypes.Address(to),
                new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> safeTransferFrom(String from, String to, BigInteger tokenId, byte[] _data) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SAFETRANSFERFROM,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(from),
                new org.web3j.abi.datatypes.Address(to),
                new org.web3j.abi.datatypes.generated.Uint256(tokenId),
                new org.web3j.abi.datatypes.DynamicBytes(_data)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setApprovalForAll(String operator, Boolean approved) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETAPPROVALFORALL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(operator),
                new org.web3j.abi.datatypes.Bool(approved)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setPause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPAUSE,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SUPPORTSINTERFACE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> symbol() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SYMBOL,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> tokenByIndex(BigInteger index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TOKENBYINDEX,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(index)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> tokenOfOwnerByIndex(String owner, BigInteger index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TOKENOFOWNERBYINDEX,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(owner),
                new org.web3j.abi.datatypes.generated.Uint256(index)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> tokenURI(BigInteger tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TOKENURI,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> totalSupply() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TOTALSUPPLY,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> transferFrom(String from, String to, BigInteger tokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFERFROM,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(from),
                new org.web3j.abi.datatypes.Address(to),
                new org.web3j.abi.datatypes.generated.Uint256(tokenId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> unsetPause() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNSETPAUSE,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static LeaveMsg load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new LeaveMsg(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static LeaveMsg load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new LeaveMsg(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static LeaveMsg load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new LeaveMsg(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static LeaveMsg load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new LeaveMsg(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<LeaveMsg> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String admin_, String baseURI_, String name_, String symbol_) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(admin_),
                new org.web3j.abi.datatypes.Utf8String(baseURI_),
                new org.web3j.abi.datatypes.Utf8String(name_),
                new org.web3j.abi.datatypes.Utf8String(symbol_)));
        return deployRemoteCall(LeaveMsg.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<LeaveMsg> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String admin_, String baseURI_, String name_, String symbol_) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(admin_),
                new org.web3j.abi.datatypes.Utf8String(baseURI_),
                new org.web3j.abi.datatypes.Utf8String(name_),
                new org.web3j.abi.datatypes.Utf8String(symbol_)));
        return deployRemoteCall(LeaveMsg.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<LeaveMsg> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String admin_, String baseURI_, String name_, String symbol_) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(admin_),
                new org.web3j.abi.datatypes.Utf8String(baseURI_),
                new org.web3j.abi.datatypes.Utf8String(name_),
                new org.web3j.abi.datatypes.Utf8String(symbol_)));
        return deployRemoteCall(LeaveMsg.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<LeaveMsg> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String admin_, String baseURI_, String name_, String symbol_) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(admin_),
                new org.web3j.abi.datatypes.Utf8String(baseURI_),
                new org.web3j.abi.datatypes.Utf8String(name_),
                new org.web3j.abi.datatypes.Utf8String(symbol_)));
        return deployRemoteCall(LeaveMsg.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class ApprovalEventResponse {
        public Log log;

        public String owner;

        public String approved;

        public BigInteger tokenId;
    }

    public static class ApprovalForAllEventResponse {
        public Log log;

        public String owner;

        public String operator;

        public Boolean approved;
    }

    public static class PausedEventResponse {
        public Log log;

        public String account;
    }

    public static class TransferEventResponse {
        public Log log;

        public String from;

        public String to;

        public BigInteger tokenId;
    }

    public static class UnpausedEventResponse {
        public Log log;

        public String account;
    }
}
